/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package my.PointAndClickGame;
import java.awt.event.ActionEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.*;
import java.util.*;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
/**
 *
 * @author kslea_000
 */
public class HighScore extends javax.swing.JFrame {
    File file = new File("highscores.txt");  
    Scanner inHighscores;
    private int playerScore;
    private String playerName;
    private final int CAPACITY = 100;
    private int validEntries = 0;
    Ranking[] playerList = new Ranking[CAPACITY];    
    
    
     public class KeyBinds extends KeyAdapter{
        public void keyPressed(KeyEvent e){
            int keyCode = e.getKeyCode();
            switch(keyCode){
                case KeyEvent.VK_ESCAPE:
                    System.exit(0);
                    break;
                    
                case KeyEvent.VK_F1:
                    JOptionPane.showMessageDialog(HighScore.this, " Karl Santino Leano 008291296\n "
                            + "Fanny Avila 009337549\n "
                            + "Point And Click Game Final Boss\n"
                            + " Winter 2016");
                    break;
            
            }
        }
    }
    
    
    /**
     * Creates new form HighScore
     */
    public HighScore() {
        initComponents();
        openFile();
        readFile();
        closeFile();
        /*  pass the unsorted text file for processing to sort()
            returns a sorted list
            now pass the sorted list to updateScores() to 
            get the first 5 scores and names   
        */
        updateScores(sort(playerList));
        
        /*
            Again, button is FOCUSED for some reason. Either way it'll catch the
            key presses
        */
        jButton1.addKeyListener(new KeyBinds());
    }
    
    private void openFile(){
        try{
            inHighscores = new Scanner(file);
        }catch(Exception e){
            System.out.println("File not found, but that really wont happen");
        }
    }
    
    /*  Read file then pass to Ranking for processing. Or we can just be lazy 
        and read the scores from the file. Also pupulate playerList. 
     */
    private void readFile(){
        while(inHighscores.hasNext()){            
            playerScore = inHighscores.nextInt();
            playerName = inHighscores.nextLine();
            playerList[validEntries] = new Ranking(playerScore,playerName);
            validEntries++;
        }
    }
    
    private void closeFile(){
        inHighscores.close();
    }
    
    // Since the list is now sorted, just get the first 5 scores. Hardcoded.
    // Could not handle empty list, not enough players.
    private void updateScores(Ranking[] sortedPlayerList){
        ranking1.setText(sortedPlayerList[0].getErrthang());
        ranking2.setText(sortedPlayerList[1].getErrthang());
        ranking3.setText(sortedPlayerList[2].getErrthang());
        ranking4.setText(sortedPlayerList[3].getErrthang());
        ranking5.setText(sortedPlayerList[4].getErrthang());
     
    }
    
    /*  Sort the text file and place it in sortedPlayerList. Future updates should be able to insert scores if 
        its already sorted. 
    */
    private Ranking[] sort(Ranking[] source){
        Ranking temp;
        for(int i = 1; i < validEntries; i++){
            for(int j = i; j > 0; j--){
                if(source[j].getPlayerScore() > source[j-1].getPlayerScore()){
                    temp = source[j];
                    source[j] = source[j-1];
                    source[j-1] = temp;
                 }
            }
        }
     
        return source;  
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        score2 = new javax.swing.JLabel();
        score3 = new javax.swing.JLabel();
        score1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        ranking1 = new javax.swing.JLabel();
        ranking2 = new javax.swing.JLabel();
        ranking3 = new javax.swing.JLabel();
        ranking4 = new javax.swing.JLabel();
        ranking5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(600, 400));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel1.setText("HIGHSCORES");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 10, -1, -1));

        score2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        getContentPane().add(score2, new org.netbeans.lib.awtextra.AbsoluteConstraints(331, 183, -1, -1));

        score3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        getContentPane().add(score3, new org.netbeans.lib.awtextra.AbsoluteConstraints(331, 201, -1, -1));

        score1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        getContentPane().add(score1, new org.netbeans.lib.awtextra.AbsoluteConstraints(331, 177, -1, -1));

        jPanel1.setLayout(new java.awt.GridLayout(5, 0));

        ranking1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ranking1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ranking1.setText("rank1");
        jPanel1.add(ranking1);

        ranking2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ranking2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ranking2.setText("rank2");
        jPanel1.add(ranking2);

        ranking3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ranking3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ranking3.setText("rank3");
        jPanel1.add(ranking3);

        ranking4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ranking4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ranking4.setText("rank4");
        jPanel1.add(ranking4);

        ranking5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ranking5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ranking5.setText("rank5");
        jPanel1.add(ranking5);

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 600, 220));

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        this.setVisible(false);
        MainMenu m = new MainMenu();
        m.setVisible(true);

    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HighScore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HighScore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HighScore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HighScore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HighScore().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel ranking1;
    private javax.swing.JLabel ranking2;
    private javax.swing.JLabel ranking3;
    private javax.swing.JLabel ranking4;
    private javax.swing.JLabel ranking5;
    private javax.swing.JLabel score1;
    private javax.swing.JLabel score2;
    private javax.swing.JLabel score3;
    // End of variables declaration//GEN-END:variables
}
